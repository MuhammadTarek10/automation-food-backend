{
  "swagger": "2.0",
  "info": {
    "title": "Foodito",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/api/v1/users/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get all Users",
        "description": "",
        "operationId": "get-users",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          },
          "404": {
            "description": "Users not found"
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Create a user",
        "description": "",
        "operationId": "register",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Food object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid status value"
          },
          "404": {
            "description": "Users not found"
          }
        }
      }
    },
    "/api/v1/food/food": {
      "get": {
        "tags": ["Food"],
        "summary": "Get food by user id",
        "description": "",
        "operationId": "get-food-by-user-id",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Food"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          },
          "404": {
            "description": "Food not found"
          }
        }
      },
      "post": {
        "tags": ["Food"],
        "summary": "add-food",
        "description": "Add food to app",
        "operationId": "add-food",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Food object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Food"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/Food"
            }
          },
          "400": {
            "description": "Invalid status value"
          },
          "404": {
            "description": "Food not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Tarek"
        },
        "email": {
          "type": "string",
          "example": "tarek@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "12345678"
        }
      }
    },
    "Food": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Fatta"
        },
        "price": {
          "type": "number",
          "example": 100
        },
        "user_id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "user_id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "room_id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "Room": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Room 1"
        },
        "code": {
          "type": "string",
          "example": "123456"
        },
        "admin_id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    }
  }
}
